packageVersion("dplyr")
cran <- tbl_df(mydf)
rm("mydf")
?tbl_df
cran
?select
select(cran, ip_id, package, country)
5:20
select(cran, r_arch:country)
elect(cran, country:r_arch)
select(cran, country:r_arch)
cran
select(cran,-time)
-5:20
-(5:20)
select(cran,-(X:size(X)))
select(cran,-(X:size)
)
filter(cran, package == "swirl")
filter(cran, r_version == "3.1.1", country == "US")
?Comparison
filter(cran, r_version <= "3.0.2", country == "IN")
filter(cran, country == "US" | country == "IN")
filter(cran,size>100500, r_os=="linux-gnu")
is.na(c(3, 5, NA, 10)
)
!is.na(c(3, 5, NA, 10))
filter(cran,!is.na(r_version))
cran2 <- select(cran,size:ip_id)
arrange(cran2, ip_id)
arrange(cran2, desc(ip_id))
arrange(cran2, package, ip_id)
arrange(cran2,country, desc(r_version), ip_id)
cran3 <- select(cran,ip_id,package,size)
cran3
mutate(cran3, size_mb = size / 2^20)
mutate(cran3, size_gb = size_mb / 2^10)
cran3
mutate(cran3, size_mb = size / 2^20, size_gb = size_mb / 2^10)
mutate(cran,correct_size=size-1000)
mutate(cran,correct_size=size+1000)
mutate(cran3,correct_size=size+1000)
summarize(cran, avg_bytes = mean(size))
mydf<-read.csv(path2csv,stringsAsFactors = FALSE)
dim(mydf)
head(mydf)
library(dplyr)
packageVersion("dplyr")
cran <- tbl_df(mydf)
skpi()
skip()
play()
install.packages("swirl")
library(swirl)
install_from_swirl("Getting and Cleaning Data")
swirl()
library(dplyr)
cran <- tbl_df(mydf)
rm(mydf)
rm("mydf")
cran
?group_by
by_package <- group_by(cran,package)
by_package
?summarize
summarize(by_package,mean(size))
submit()
pack_sum
quantile(pack_sum$count, probs = 0.99)
top_counts <- filter(by_package,pack_sum$count>679)
top_counts <- filter(by_package,summarize(by_package,n())>679)
top_counts <- filter(pack_sum,count>679)
top_counts
View(top_counts)
top_counts_sorted <- arrange(top_counts,desc(count))
View(top_counts_sorted)
quantile(pack_sum$unique, probs = 0.99)
top_unique <- filter(pack_sum,unique>465)
View(top_unique)
top_unique_sorted <- arrange(top_unique,desc(unique))
View(top_unique_sorted)
submit()
submit()
?chain
submit()
View(result3)
submit()
submit()
submit()
submit()
submit()
library(swirl)
install_from_swirl("Getting and Cleaning Data")
swirl()
library(tidyr)
students
?gather
gather(students,sex,count,-grade)
students2
res <- gather(students2,sex,class,count,-grade)
res <- gather(students2,sex_class,value,-grade)
res <- gather(students2,sex_class,count,-grade)
res
?seperate
?separate
separate(res,sex_class,c("sex","class"))
submit()
submit()
students3
submit()
submit()
submit()
submit()
submit()
submit()
submit()
?spread
submit()
submit()
submit()
submit()
play()
stocks <- data.frame(
time = as.Date('2009-01-01') + 0:9,
X = rnorm(10, 0, 1),
Y = rnorm(10, 0, 2),
Z = rnorm(10, 0, 4)
)
stocksm <- stocks %>% gather(stock, price, -time)
stocksm
head(stocksm)
stocksm %>% spread(stock, price)
nxt()
submit()
extract_numeric("class5")
?mutate
submit()
submit()
students4
submit()
submit()
submit()
View(students4)
View(students4)
submit()
passed
failed
passed <- mutate(passed,status="passed")
failed <- mutate(failed,status="failed")
?bind_rows
bind_rows(passed,failed)
sat
?contains
?contains
sat
submit()
?group_by
submit()
?mutate
submit()
submit()
Sys.getlocale("LC_TIME")
library(lubridate)
help(package = lubridate
)
this_day <- today()
this_day
year(this_day)
wday(this_day)
wday(this_day,label=TRUE)
this_moment <- now()
this_moment
hour(this_moment)
my_date<-ymd("1989-05-17")
my_date
class(my_date)
ymd("1989 May 17")
ymd("March 12, 1975")
mdy("March 12, 1975")
dmy("25th day of August 1985")
dmy(25081985)
ymd("192012")
ymd("19200102")
ymd("1920/1/2")
dt1
ymd_hms(dt1)
lubridate("03:22:14")
hms("03:22:14")
dt2
ymd(dt2)
this_moment
update(this_moment, hours = 8, minutes = 34, seconds = 55)
this_moment
this_moment<-Sis.Time()
this_moment<-Sisment.Time()
this_moment <- now()
this_moment<-update(this_moment, hours = 10, minutes = 16, seconds = 0)
this_moment
nyc <- now()
nyc <- now("Ameica/New/York")
nyc <- now("America/New_York")
nyc
depart <- nyc + days(2)
depart
depart <- update(depart, hours=17, minutes=34)
depart
arrive <- depart + hours(15) + minutes(50)
?eith_tz
?with_tz
arrive <- with_tz(arrive,tzone="Asia/Hong_Kong")
arrive
last_time <- with_tz(mdy("June 17, 2008"),tzone="Singapore")
last_time <- mdy("June 17, 2008",tzone="Singapore")
last_time <- mdy("June 17, 2008",tz="Singapore")
last_time
?new_interval
how_long <- new_interval(last_time,arrive)
as.period(how_long)
stopwatch()
setwd("~/datasciencecoursera/Reproducible Research/RepData_PeerAssessment1")
source('~/datasciencecoursera/Reproducible Research/RepData_PeerAssessment1/RCodePreliminar.R')
str(activity)
head(activity)
summary(activity)
activity <- read.csv(unz("activity.zip", "activity.csv"),header=TRUE)
str(activity)
head(activity)
summary(activity)
activity_freeNA <- activity[,!is.NA(activity$steps)]
activity_freeNA <- activity[,!is.na(activity$steps)]
activity_freeNA <- activity[!is.na(activity$steps),]
17568-2304
activity_freeNA <- data.table(activity[!is.na(activity$steps),])
library(data.table)
activity_freeNA <- data.table(activity[!is.na(activity$steps),])
rm( activity_freeNA)
totalsteps <- with(activity,tapply(steps,date,sum,na.rm=TRUE))
hist(totalsteps)
mean(activity$steps,na.rm=TRUE)
median(activity$steps,na.rm=TRUE)
mean(totalsteps)
median(totalsteps)
summary(totalsteps)
str(totalsteps)
```{r mean_median}
median(totalsteps)
summary(totalsteps)
activity_woNA <- activity[!is.na(activity$steps),]
totalsteps <- with(activity_woNA,tapply(steps,date,sum))
hist(totalsteps)
mean(totalsteps)
median(totalsteps)
mean(totalsteps)
activity_woNA <- activity[!is.na(activity$steps),]
totalsteps <- with(activity_woNA,tapply(steps,date,sum))
totalsteps <- with(activity_woNA,tapply(steps,date,sum,rm.na=TRUE))
hist(totalsteps)
mean(totalsteps)
median(totalsteps)
totalsteps <- with(activity_woNA,tapply(steps,date,sum,rm.na=TRUE))
hist(totalsteps)
totalsteps <- with(activity_woNA,tapply(steps,date,sum,rm.na=TRUE))
summary(activity_woMA)
summary(activity_woNA)
meansteps <- with(activity_woNA,tapply(steps,interval,mean))
activity_internalmean <- data.frame(meansteps)
str(activity_internalmean)
head(activity_internalmean)
?data.frame
data.frame(interval=names(meansteps),meansteps)
activity_internalmean <- data.frame(interval=names(meansteps),meansteps)
head(activity_internalmean)
str(activity_internalmean)
avgsteps <- with(activity_woNA,tapply(steps,interval,mean))
activity_internalmean <- data.frame(interval=names(avgsteps),avgsteps)
head(activity_internalmean)
str(activity_internalmean)
plot(activity_internalmean$interval,activity_internalmean$avgsteps)
plot(activity_internalmean$interval,activity_internalmean$avgsteps,type="l")
head(activity_internalmean)
tail(activity_internalmean)
activity_internalmean
?sort
?plot
plot(x=activity_internalmean$interval,y=activity_internalmean$avgsteps,type="l")
activity_internalmean <- activity_internalmean[order(activity_internalmean$interval),]
str(activity_internalmean)
head(activity_internalmean)
tail(activity_internalmean)
plot(x=activity_internalmean$interval,y=activity_internalmean$avgsteps,type="l")
activity_internalmean$interval <- as.numeric(activity_internalmean$interval)
activity_internalmean <- activity_internalmean[order(activity_internalmean$interval),]
head(activity_internalmean)
tail(activity_internalmean)
plot(x=activity_internalmean$interval,y=activity_internalmean$avgsteps,type="l")
avgsteps <- with(activity_woNA,tapply(steps,interval,mean))
activity_internalmean <- data.frame(interval=names(avgsteps),avgsteps)
str(activity_internalmean)
activity_internalmean$interval <- as.numeric(activity_internalmean$interval)
activity_internalmean <- activity_internalmean[order(activity_internalmean$interval),]
head(activity_internalmean)
tail(activity_internalmean)
plot(x=activity_internalmean$interval,y=activity_internalmean$avgsteps,type="l")
avgsteps <- with(activity_woNA,tapply(steps,interval,mean))
activity_internalmean <- data.frame(interval=names(avgsteps),avgsteps)
str(activity_internalmean)
head(activity_internalmean)
tail(activity_internalmean)
activity_internalmean$interval <- as.numeric(activity_internalmean$interval)
head(activity_internalmean)
tail(activity_internalmean)
activity_internalmean <- data.frame(interval=names(avgsteps),avgsteps)
str(activity_internalmean)
head(activity_internalmean)
tail(activity_internalmean)
activity_internalmean$interval <- as.integer(activity_internalmean$interval)
head(activity_internalmean)
tail(activity_internalmean)
activity_internalmean <- data.frame(interval=as.integer(names(avgsteps)),avgsteps)
str(activity_internalmean)
head(activity_internalmean)
tail(activity_internalmean)
plot(x=activity_internalmean$interval,y=activity_internalmean$avgsteps,type="l")
plot(x=activity_internalmean$interval,y=activity_internalmean$avgsteps,type="l",xlim=2500)
activity_internalmean <- data.frame(interval=as.integer(names(avgsteps)),avgsteps,row.names=FALSE)
str(activity_internalmean)
head(activity_internalmean)
tail(activity_internalmean)
activity_internalmean <- data.frame(interval=as.integer(names(avgsteps)),avgsteps,row.names=TRUE)
str(activity_internalmean)
head(activity_internalmean)
tail(activity_internalmean)
activity_internalmean <- data.frame(interval=as.integer(names(avgsteps)),avgsteps)
str(activity_internalmean)
head(activity_internalmean)
tail(activity_internalmean)
activity_NA <- activity[is.na(activity$steps),]
count(activity_NA$steps)
nrows(activity_NA$steps)
rows(activity_NA$steps)
nrow(activity_NA$steps)
nrow(activity_NA)
activity[is.na(activity$steps),activity$steps]
head(activity)
head(activity_internalmean)
head(activity_NA)
str(activity)
?round
?merge
merge(activity_NA,activity_internalmean)
activity_auxiliar <- merge(activity_NA,activity_internalmean)
head(activity_auxiliar)
activity_auxiliar <- activity_auxiliar[order(date,interval)]
activity_auxiliar <- activity_auxiliar[order(date,interval),]
head(activity_auxiliar)
activity_auxiliar[order(date,interval),]
names(activity_auxiliar)
activity_auxiliar[order(activity_auxiliar$date,activity_auxiliar$interval),]
activity_auxiliar <- merge(activity_NA,activity_internalmean)
activity_auxiliar <- activity_auxiliar[order(activity_auxiliar$date,activity_auxiliar$interval),]
activity[is.na(activity$steps),1] <- floor(activity_auxiliar$avgsteps)
summary(activity)
source('~/datasciencecoursera/Reproducible Research/RepData_PeerAssessment1/RCodePreliminar.R')
summary(activity)
summary(new_activity)
newtotalsteps <- with(new_activity,tapply(steps,date,sum))
hist(newtotalsteps)
mean(newtotalsteps)
median(newtotalsteps)
source('~/datasciencecoursera/Reproducible Research/RepData_PeerAssessment1/RCodePreliminar.R')
mean(newtotalsteps)
median(newtotalsteps)
?weekdays
new_activity[,weekday=weekdays(new_activity$date)]
new_activity[,weekday=weekdays(new_activity$date)]
weekdays(new_activity$date)
new_activity <- data.table(new_activity)
new_activity[,weekday=weekdays(new_activity$date)]
new_activity[,weekday:=weekdays(new_activity$date)]
new_activity[,weekday:=weekdays(new_activity$date)]
new_activity[,weekday:=weekdays(new_activity$date)]
head(new_activity)
new_activity <- new_activity[,weekday:=weekdays(new_activity$date)]
new_activity <- new_activity[,weekday:=weekdays(new_activity$date)]
head(new_activity)
new_activity <- activity
## Replacing missing values on new data set
new_activity[is.na(new_activity$steps),1] <- floor(activity_auxiliar$steps)
new_activity[,weekday:=weekdays(new_activity$date)]
new_activity <- data.table(new_activity)
new_activity[,weekday:=weekdays(new_activity$date)]
new_activity[new_activity$weekday=="Saturday" | new_activity$weekday=="Sunday",4] <- "weekend"
new_activity[new_activity$weekday!="weekend",4] <- "weekday"
unique(new_activity$weekday)
str(new_activity)
new_activity$weekday <- as.factor(new_activity$weekday)
str(new_activity)
library(lattice)
library(lattice)
library(lattice)
?qplot
p <- xyplot(avgsteps ~ interval | weekday, data=new_activity,
type = 'l',
main="Average Number of Steps Taken
\nAveraged Across All Weekday Days or Weekend Days",
xlab="5-Minute Interval (military time)",
ylab="Average Number of Steps Taken")
p
print (p)
p <- xyplot(avgsteps ~ interval | weekday, data=new_activity,
type = 'l',
main="Average Number of Steps Taken
\nAveraged Across All Weekday Days or Weekend Days",
xlab="5-Minute Interval (military time)",
ylab="Average Number of Steps Taken")
print (p)
?xyplot
library(lattice)
p <- xyplot(avgsteps ~ interval | weekday, data=new_activity,
type = 'l',
main="Average number of steps taken across weekday or weekend days",
xlab="5-Minute Interval",
ylab="Number of steps")
print (p)
str(new_activity)
p <- xyplot(mean(steps) ~ interval | weekday, data=new_activity,
type = 'l',
main="Average number of steps taken across weekday or weekend days",
xlab="5-Minute Interval",
ylab="Number of steps")
print (p)
floor(3.7)
new_activity[,avgsteps:=mean(stpes),by=interval]
library(lattice)
p <- xyplot(avgsteps ~ interval | weekday, data=new_activity,
type = 'l',
main="Average number of steps taken across weekday or weekend days",
xlab="5-Minute Interval",
ylab="Number of steps")
print (p)
head(new_activity)
new_activity[,avgsteps:=mean(stpes),by=interval]
new_activity[,avgsteps:=mean(steps),by=interval]
library(lattice)
p <- xyplot(avgsteps ~ interval | weekday, data=new_activity,
type = 'l',
main="Average number of steps taken across weekday or weekend days",
xlab="5-Minute Interval",
ylab="Number of steps")
print (p)
head(new_activity)
new_activity[,avgsteps:=mean(steps),by=interval]
head(new_activity)
new_activity <- activity
new_activity[is.na(new_activity$steps),1] <- floor(activity_auxiliar$avgsteps)
head(new_activity)
new_activity <- data.table(new_activity)
new_activity[,weekday:=weekdays(new_activity$date)]
new_activity[new_activity$weekday=="Saturday" | new_activity$weekday=="Sunday",4] <- "weekend"
new_activity[new_activity$weekday!="weekend",4] <- "weekday"
str(new_activity)
head(new_activity)
new_activity$weekday <- as.factor(new_activity$weekday)
new_activity[,avgsteps:=mean(steps),by=interval]
head(new_activity)
tail(new_activity)
tail(new_activity[new_activity==0,])
tail(new_activity[new_activity$interval==0,])
tail(new_activity[new_activity$interval==5,])
head(new_activity[new_activity$interval==5,])
library(lattice)
p <- xyplot(avgsteps ~ interval | weekday, data=new_activity,
type = 'l',
main="Average number of steps taken across weekday or weekend days",
xlab="5-Minute Interval",
ylab="Number of steps")
print (p)
tail(new_activity[new_activity$interval==0,])
tail(new_activity[new_activity$weekday=="weekday",])
tail(new_activity[new_activity$weekday=="weekend",])
new_activity[,avgsteps:=mean(steps),by=.(interval,weekday)]
library(lattice)
p <- xyplot(avgsteps ~ interval | weekday, data=new_activity,
type = 'l',
main="Average number of steps taken across weekday or weekend days",
xlab="5-Minute Interval",
ylab="Number of steps")
print (p)
p <- xyplot(log(avgsteps) ~ interval | weekday, data=new_activity,
type = 'l',
main="Average number of steps taken across weekday or weekend days",
xlab="5-Minute Interval",
ylab="Number of steps")
print (p)
p <- xyplot(avgsteps ~ interval | weekday, data=new_activity,
type = 'l',
main="Average number of steps taken across weekday or weekend days",
xlab="5-Minute Interval",
ylab="Number of steps")
print (p)
p <- xyplot(avgsteps ~ interval | weekday, data=new_activity,
type = 'l', layout=c(1,2)
main="Average number of steps taken across weekday or weekend days",
xlab="5-Minute Interval",
ylab="Number of steps")
print (p)
p <- xyplot(avgsteps ~ interval | weekday, data=new_activity,
type = 'l', layout=c(1,2),
main="Average number of steps taken across weekday or weekend days",
xlab="5-Minute Interval",
ylab="Number of steps")
print (p)
